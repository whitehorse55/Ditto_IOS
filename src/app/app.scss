// http://ionicframework.com/docs/theming/


// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.




// ion-toolbar {
//   padding-top: constant(safe-area-inset-top); //for iOS 11.2
//   padding-top: env(safe-area-inset-top); //for iOS 11.1
// }

ion-footer {
  margin-bottom: constant(safe-area-inset-bottom);
  margin-bottom: env(safe-area-inset-bottom);
}

.toolbar-background-ios{
  background: #fff;
  // height: 70px;
}

////////////////////////////////custom alert controller////////////////
.alert-md  .alert-title, .alert-ios  .alert-title{
    font-size: 20px;
    color : map-get($colors , textcolor);
    text-align: center;
  }
  
  
  .alert-ios .alert-sub-title {
    font-size: 14px;
    color : map-get($colors , textcolor);
  }

  .alert-button-group .button-inner{
    color : map-get($colors , textcolor);
  }

  .alert-md  [aria-checked=true] .alert-radio-label,
  {
    color : map-get($colors , textcolor);
  }
  
  .alert-md  .alert-radio-label
  {
    color : map-get($colors , textcolor);
  }
  
  .alert-md  .alert-sub-title{
    font-size: 18px;
    color : map-get($colors , textcolor);
  }
  
  
  .alert-md .alert-ios  .alert-message{
    font-size: 15px;
    color : map-get($colors , textcolor);
  }
  
  .alert-md   .alert-button .button-inner{
    -webkit-justify-content : flex-end;
    -ms-flex-pack : end;
    justify-content: flex-end;
    color : map-get($colors , textcolor);
  }
  
  .alert-md .alert-input {
    margin: 5px 0;
    border-bottom: 1px solid #dedede;
    color : map-get($colors , textcolor);
  }
  
  
  button.alert-button-group {
    width: 33.33%;
  }
  
  .alert-button-group .button-inner {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
  }
  
  .alert-button-group-vertical {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row ;
  }
  
  .alert-md  .alert-ios  .alert-wrapper {
    margin-top: 30%;
    align-content: center;
    border-radius: 10px;
    max-width: 280px;  background-color: #3b3d3c;
    -webkit-box-shadow: 0 16px 20px rgba(0, 0, 0, 0.4);
    box-shadow: 0 16px 20px rgba(0, 0, 0, 0.4);
  }
  

  // 
  .toastview
  {
    width: 100%;
    height: 100px;
    background-color: white;
    border-radius: 10px;
    color:black;
    font-size: 15px;
  }

  p{
    font-family: "Avenir-Black";
  }

.item-avatar,
.item-avatar .item-content,
.item-avatar-left,
.item-avatar-left .item-content {
  min-height: 0;
}

.checkbox input, .checkbox-icon {
  // display: inline-block;
  // vertical-align: middle;
}

.checkbox-md-primary .checkbox-checked {
  border-color: #387ef5;
  background-color: #387ef5;
}

// checkbox related
$checkbox-ios-icon-size : 21px;
$checkbox-md-icon-size : 21px;
$checkbox-ios-icon-border-color-on :#59b689; 
$checkbox-md-icon-background-color-on : #59b689; 

$tabs-ios-tab-icon-color : rgba(0, 0, 0, 0.43);
$tabs-ios-tab-icon-color : rgba(0, 0, 0, 0.43);
$tabs-ios-tab-icon-color-active : rgba(0, 0, 0, 0.89);
$tabs-ios-tab-text-color-active : rgba(0, 0, 0, 0.89);

.tabs-ios .tab-button[aria-selected=true] .tab-button-icon,.tabs-md .tab-button[aria-selected=true] .tab-button-icon {
  color: rgba(0, 0, 0, 0.89);
}

.tabs-ios .tab-button[aria-selected=true], .tabs-md .tab-button[aria-selected=true]  
{
  color: rgba(0, 0, 0, 0.89);
}

.tabbar {
	a.tab-button[aria-selected=false]:nth-of-type(3) {
		  // color: rgb(236 ,153 ,34);
		.tab-button-icon {
			color: rgb(236 ,153 ,34);
		}
	}
}